<% if d != nil 
	@definition = d %>
	
			<% if parent_id != head_id %>
				<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Delete entry'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_destroy', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id}}, :confirm => "Are you sure you want to delete this entry?") %><br>
			<% else %>
				<%#= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Delete definition'), :update => 'complete_definition', :url => {:action => 'public_destroy', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id}}, :confirm => "Are you sure you want to delete this entry?") %>
			<% end %>
	<b>Definition: </b>
	<%# if head_id != parent_id %>
	<!--<a href="/images/familylg.jpg" title="add a caption to title attribute / or leave blank" class="thickbox"><img src="/images/shoulder.gif" alt="Single Image"/></a>-->
			<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => d.id, :history_class => d.class.to_s }}) %>	
			<%= link_to image_tag('pencil.png',:border => 0), url_for( :action => 'edit_dynamic_definition', :id => d.id, :internal=>'edit_box', :public=>'yes', :height=>500,:width=>650, :modal=>true) + '&TB_iframe=true', :class=>:thickbox, :title=>'Definition Edit via Thickbox' %>		
			<%#= link_to_function image_tag('pencil.png',:border => 0), 'definition_id='+d.id.to_s+';parent_id='+head_id.to_s+";dialect_id="+d.id.to_s+";edit_popup('definitions','"+d.id.to_s+"','"+head_id.to_s+"')", :title => "Edit"%>
			<span class=menuvalue onclick='definition_id=<%= d.id.to_s %>;parent_id=<%= head_id.to_s %>;show_menu(definition_menu,getCoord(arguments[0]));'>
			<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), '', :title => 'Edit Relationships' %> 
			</span>
		<%# end %>
	<%#= link_to_function image_tag('sub',:border => 0), "add_def_popup('definitions','"+d.id.to_s+"','"+parent_id.to_s+"','"+head_id.to_s+"')", :title => "Add Subdefinition"%>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Clear Definition'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_definition', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id }}, :confirm => "Are you sure you want to clear this definition?") %>
	<% def_edit_path = definition_edit_url(:id => d.id) %>					
	<%= link_to_remote(image_tag('comment.png',:border => 0), :url => def_edit_path, :update => "#{d.id}_defdiv", :title => 'Edit definition') %>
	    <input type=hidden name=definition[thematic_classification<%=d.id%>] id=definition[thematic_classification<%=d.id%>] value="<%=d.thematic_classification %>" >
				<% if d.language == 'Tibetan' %>
				<span class="tib1">
				<% end %>
	<%#= in_place_editor_field( :definition, :definition, {},{:cols=> 50, :rows=> 7, :external_control => d.id}) %>
				  <span class="definitions_show">
					<div id="<%= "#{d.id}_defdiv" %>">
					  <%= render :partial => 'definition_show', :locals => {:d => @definition} %>
				    </div>
				   </span>
				<% if d.language == 'Tibetan' %>
				</span>
				<% end %>
	
	<!--  <br> -->
		<% if d.meta != nil%>
		<dl style="margin-top:0em;margin-bottom:0em;">
				<dd style="display:none"></dd>
				<dd>		<% t = Time.now %>
		<%= render :partial => 'meta', :locals => {:meta_location => t.to_f, :meta => d.meta , :head_id => head_id} %>
			</dd>
		</dl>
		<% end %>
		<% if d.translations.size > 0%>
		<% count = 0;
		   size = d.translations.size;
			for e in d.translations %>
		<b>Translation<% if e.language != nil and e.language != '' %> (<%= e.language %>)<% end %>:</b>
			<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => e.id, :history_class => e.class.to_s }}) %>			
	<%= link_to_remote image_tag('pencil.png',:border => 0, :title => "Edit"),:update => d.id.to_s+'_translation', :loading => 'dialect_id='+e.id.to_s, :url => {:controller => 'translations', :action => 'public_edit', :id => e.id, :params => {'definition_id' => head_id}} %>
			<span class=menuvalue onclick=show_menu(translation_menu,getCoord(arguments[0]));>
			<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'translation_id='+e.id.to_s, :title => 'Edit Relationships' %> 
			</span>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Translation'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_translation', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id, :translation => e.id }}, :confirm => "Are you sure you want to remove this translation?") %>			
					<% if e.language == 'Tibetan' %>
					<span class="tib1">
					<% end %>
					<span class='tinyfied_show'>
					<%= e.translation.s if e.translation != nil %>
					</span>
					<% if e.language == 'Tibetan' %>
					</span>
					<% end %>
				<% if e.meta != nil%>
				<dl style="margin-top:0em;margin-bottom:0em;">
						<dd style="display:none"></dd>
						<dd>		<% t = Time.now %>
				<%= render :partial => 'meta', :locals => {:meta_location => t.to_f, :meta => e.meta , :head_id => head_id} %>
					</dd>
				</dl>
		<% end %>
					
			<br>
		<% end %>
		<!-- <br> -->
		<% end %>
		<span id="<%= d.id%>_translation" > </span>
		<% if (d.thematic_classification != nil and d.thematic_classification != "") or (d.thematic_classification_type != nil) %>
			<b>Thematic classification:</b>  
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Thematic Classification'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_thematic_classification', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id }}, :confirm => "Are you sure you want to remove this Thematic Classification?") %>			
				<% if d.language == 'Tibetan' %>
				<span class="tib1">
				<% end %>
    <span id=definition[thematic_classification<%= @definition.id %>]_value class=menuvalue onclick1=definition_id=<%= d.id %>;show_menu(theme,getCoord(arguments[0]));>
	
		<%= image_tag('comment.png',:border => 0, :title => 'Edit') %> 
		<span id="definition[thematic_classification_type<%= d.id %>]_selector" >
			<%= '['+d.thematic_classification.s+']' if d.thematic_classification != nil %>
			<%= render(:partial => 'display_category_selector_link', :locals => {:function_name => 'thematic_classification_type', :title => (d.thematic_classification_type != nil ? d.thematic_classification_type.title : 'Select A Value'), :id => d.id, :data_id => 272, :update_id => "definition[thematic_classification_type#{d.id}]_selector"})%>
		</span>
	
		<%#= image_tag 'comment'%>
	<%#= @definition.thematic_classification.s if @definition.thematic_classification != nil %>
	
	</span>
				<% if d.language == 'Tibetan' %>
				</span>
				<% end %>
	<br>
     <script type="text/javascript" language="javascript">Event.observe('definition[thematic_classification<%=d.id%>]_value', 'mouseover', function(e){ e=document.getElementById('definition[thematic_classification<%=d.id%>]_value');e.style.backgroundColor='#FFFF99'; });Event.observe('definition[thematic_classification<%=d.id%>]_value', 'mouseout', function(e){ new Effect.Highlight('definition[thematic_classification<%=d.id%>]_value',{ startcolor: '#FFFF99', endcolor: '#FFFFFF', restorecolor: '#FFFFFF'})});</script>
		<% end %>

		<% if (d.grammatical_function != nil and d.grammatical_function != "") or (d.grammatical_function_type_id != nil) %>
		<b>Function:</b>  
		    <input type=hidden name=definition[grammatical_function<%= d.id %>] id=definition[grammatical_function<%= d.id %>] value="<%= d.grammatical_function %>" >
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Grammatical Function'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_grammatical_function', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id }}, :confirm => "Are you sure you want to remove this Grammatical Function?") %>			
				<% if d.language == 'Tibetan' %>
				<span class="tib1">
				<% end %>
    <span id=definition[grammatical_function<%= d.id %>]_value class=menuvalue onclick1='definition_id=<%= d.id %>;dialect_id=<%= d.id %>;show_menu(grammar_menu,getCoord(arguments[0]));'>
			<%#= link_to image_tag('comment.png',:border => 0), '#', :title => 'Edit function' %>

	<%= image_tag('comment.png',:border => 0, :title => 'Edit') %> 
	<span id="definition[grammatical_function_type<%= d.id %>]_selector" >
		<%= '[<i>'+d.grammatical_function.s+'</i>]' if d.grammatical_function != nil %>
		<%= render(:partial => 'display_category_selector_link', :locals => {:function_name => 'grammatical_function_type', :title => (d.grammatical_function_type != nil ? d.grammatical_function_type.title : 'Select A Value'), :id => d.id, :data_id => 286, :update_id => "definition[grammatical_function_type#{d.id}]_selector"})%>
	</span>

	</span>
				<% if d.language == 'Tibetan' %>
				</span>
				<% end %>
	<br>
    	<script type="text/javascript" language="javascript">Event.observe('definition[grammatical_function<%= d.id %>]_value', 'mouseover', function(e){ e=document.getElementById('definition[grammatical_function<%= d.id %>]_value');e.style.backgroundColor='#FFFF99'; });Event.observe('definition[grammatical_function<%= d.id %>]_value', 'mouseout', function(e){ new Effect.Highlight('definition[grammatical_function<%= d.id %>]_value',{ startcolor: '#FFFF99', endcolor: '#FFFFFF', restorecolor: '#FFFFFF'})});</script>

		<% end %>

		<% if d.register_type_id != nil %>
		<b>Register: </b>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Register'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_register', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id }}, :confirm => "Are you sure you want to remove this Register?") %>			
			<%#= link_to image_tag('comment.png',:border => 0,:id => 'register'+d.id.to_s), '#', :title => 'Edit register' %>

		    <span id=definition[register<%= d.id %>]_value class=menuvalue onclick1='definition_id=<%= d.id %>;dialect_id=<%= d.id %>;show_menu(grammar_menu,getCoord(arguments[0]));'>
					<%#= link_to image_tag('comment.png',:border => 0), '#', :title => 'Edit function' %>

			<%= image_tag('comment.png',:border => 0, :title => 'Edit') %> 
			<span id="definition[register_type<%= d.id %>]_selector" >
				<%= '[<i>'+d.register.s+'</i>]' if d.register != nil %>
				<%= render(:partial => 'display_category_selector_link', :locals => {:function_name => 'register_type', :title => (d.register_type != nil ? d.register_type.title : 'Select A Value'), :id => d.id, :data_id => 190, :update_id => "definition[register_type#{d.id}]_selector"})%>
			</span>

			</span>
	    	<script type="text/javascript" language="javascript">Event.observe('definition[register<%= d.id %>]_value', 'mouseover', function(e){ e=document.getElementById('definition[register<%= d.id %>]_value');e.style.backgroundColor='#FFFF99'; });Event.observe('definition[register<%= d.id %>]_value', 'mouseout', function(e){ new Effect.Highlight('definition[register<%= d.id %>]_value',{ startcolor: '#FFFF99', endcolor: '#FFFFFF', restorecolor: '#FFFFFF'})});</script>

    <%#= in_place_select_editor_field( :definition, :register, {}, {:select_options => @register, :fieldname => 'definition[register]', :external_control => 'register'+d.id.to_s}) %> <br>

		<% end %>
		
		<% if d.language_context_type_id != nil %>
		<b>Language context: </b>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Language Context'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_language_context', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id }}, :confirm => "Are you sure you want to remove this Language Content?") %>			
		    <span id=definition[language_context<%= d.id %>]_value class=menuvalue onclick1='definition_id=<%= d.id %>;dialect_id=<%= d.id %>;show_menu(grammar_menu,getCoord(arguments[0]));'>
					<%#= link_to image_tag('comment.png',:border => 0), '#', :title => 'Edit function' %>

			<%= image_tag('comment.png',:border => 0, :title => 'Edit') %> 
			<span id="definition[language_context_type<%= d.id %>]_selector" >
				<%= '[<i>'+d.language_context.s+'</i>]' if d.language_context != nil %>
				<%= render(:partial => 'display_category_selector_link', :locals => {:function_name => 'language_context_type', :title => (d.language_context_type != nil ? d.language_context_type.title : 'Select A Value'), :id => d.id, :data_id => 185, :update_id => "definition[language_context_type#{d.id}]_selector"})%>
			</span>

			</span>
	    	<script type="text/javascript" language="javascript">Event.observe('definition[language_context<%= d.id %>]_value', 'mouseover', function(e){ e=document.getElementById('definition[language_context<%= d.id %>]_value');e.style.backgroundColor='#FFFF99'; });Event.observe('definition[language_context<%= d.id %>]_value', 'mouseout', function(e){ new Effect.Highlight('definition[language_context<%= d.id %>]_value',{ startcolor: '#FFFF99', endcolor: '#FFFFFF', restorecolor: '#FFFFFF'})});</script>
			<%#= link_to image_tag('comment.png',:border => 0,:id => 'language_context'+d.id.to_s), '#', :title => 'Edit language context' %>
    <%#= in_place_select_editor_field( :definition, :language_context, {}, {:select_options => @language_context, :fieldname => 'definition[language_context]', :external_control => 'language_context'+d.id.to_s}) %><br>
		<% end %>
		
		<% if d.numerology != nil and d.numerology != "" %>
		<b>Numerology: </b>
 			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Numerology'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_numerology', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id }}, :confirm => "Are you sure you want to remove this Numerology?") %>			
			<%= link_to image_tag('comment.png',:border => 0,:id => 'numerology'+d.id.to_s), '#', :title => 'Edit numerology' %>
   <%= in_place_editor_field( :definition, :numerology, {}, {:cols => 50, :rows => 1, :fieldname => 'definition[numerology]', :external_control => 'numerology'+d.id.to_s}) %> <br>
		<% end %>

		<% if d.literary_genre_type_id != nil %>
    <b>Literary genre: </b>
    <input type=hidden name=definition[literary_genre<%= d.id %>] id=definition[literary_genre<%= d.id %>] value="<%= d.literary_genre %>" >
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Literary Genre'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_literary_genre', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id }}, :confirm => "Are you sure you want to remove this Literary Genre?") %>			
		    <span id=definition[literary_genre<%= d.id %>]_value class=menuvalue onclick1='definition_id=<%= d.id %>;dialect_id=<%= d.id %>;show_menu(grammar_menu,getCoord(arguments[0]));'>
					<%#= link_to image_tag('comment.png',:border => 0), '#', :title => 'Edit function' %>

			<%= image_tag('comment.png',:border => 0, :title => 'Edit') %> 
			<span id="definition[literary_genre_type<%= d.id %>]_selector" >
				<%= '[<i>'+d.literary_genre.s+'</i>]' if d.literary_genre != nil %>
				<%= render(:partial => 'display_category_selector_link', :locals => {:function_name => 'literary_genre_type', :title => (d.literary_genre_type != nil ? d.literary_genre_type.title : 'Select A Value'), :id => d.id, :data_id => 119, :update_id => "definition[literary_genre_type#{d.id}]_selector"})%>
			</span>

			</span>
			<%#= link_to image_tag('comment.png',:border => 0,:id => 'literary_genre'+d.id.to_s), '#', :title => 'Edit literary genre' %>
			<script type="text/javascript" language="javascript">Event.observe('definition[literary_genre<%=d.id%>]_value', 'mouseover', function(e){ e=document.getElementById('definition[literary_genre<%=d.id%>]_value');e.style.backgroundColor='#FFFF99'; });Event.observe('definition[literary_genre<%=d.id%>]_value', 'mouseout', function(e){ new Effect.Highlight('definition[literary_genre<%=d.id%>]_value',{ startcolor: '#FFFF99', endcolor: '#FFFFFF', restorecolor: '#FFFFFF'})});</script>
	     
    <%#= in_place_select_editor_field( :definition, :literary_genre, {}, {:select_options => @literary_genre, :fieldname => 'definition[literary_genre]', :external_control => 'literary_genre'+d.id.to_s}) %><br>
    <% end %>

		<% if d.literary_period_type_id != nil %>
		<b>Literary period: </b>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Literary Period'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_literary_period', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id }}, :confirm => "Are you sure you want to remove this Literary Period?") %>			
		    <span id=definition[literary_period<%= d.id %>]_value class=menuvalue onclick1='definition_id=<%= d.id %>;dialect_id=<%= d.id %>;show_menu(grammar_menu,getCoord(arguments[0]));'>
					<%#= link_to image_tag('comment.png',:border => 0), '#', :title => 'Edit function' %>

			<%= image_tag('comment.png',:border => 0, :title => 'Edit') %> 
			<span id="definition[literary_period_type<%= d.id %>]_selector" >
				<%= '[<i>'+d.literary_period.s+'</i>]' if d.literary_period != nil %>
				<%= render(:partial => 'display_category_selector_link', :locals => {:function_name => 'literary_period_type', :title => (d.literary_period_type != nil ? d.literary_period_type.title : 'Select A Value'), :id => d.id, :data_id => 187, :update_id => "definition[literary_period_type#{d.id}]_selector"})%>
			</span>

			</span>
	    	<script type="text/javascript" language="javascript">Event.observe('definition[literary_period<%= d.id %>]_value', 'mouseover', function(e){ e=document.getElementById('definition[literary_period<%= d.id %>]_value');e.style.backgroundColor='#FFFF99'; });Event.observe('definition[literary_period<%= d.id %>]_value', 'mouseout', function(e){ new Effect.Highlight('definition[literary_period<%= d.id %>]_value',{ startcolor: '#FFFF99', endcolor: '#FFFFFF', restorecolor: '#FFFFFF'})});</script>
			<%#= link_to image_tag('comment.png',:border => 0,:id => 'literary_period'+d.id.to_s), '#', :title => 'Edit literary period' %>
    <%#= in_place_select_editor_field( :definition, :literary_period, {}, {:select_options => @literary_period, :fieldname => 'definition[literary_period]', :external_control => 'literary_period'+d.id.to_s}) %><br>
		<% end %>

		<% if d.literary_form_type_id != nil %>
    <b>Literary form: </b>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Literary Form'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_literary_form', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id }}, :confirm => "Are you sure you want to remove this Literary Form?") %>			
		    <span id=definition[literary_form<%= d.id %>]_value class=menuvalue onclick1='definition_id=<%= d.id %>;dialect_id=<%= d.id %>;show_menu(grammar_menu,getCoord(arguments[0]));'>
					<%#= link_to image_tag('comment.png',:border => 0), '#', :title => 'Edit function' %>

			<%= image_tag('comment.png',:border => 0, :title => 'Edit') %> 
			<span id="definition[literary_form_type<%= d.id %>]_selector" >
				<%= '[<i>'+d.literary_form.s+'</i>]' if d.literary_form != nil %>
				<%= render(:partial => 'display_category_selector_link', :locals => {:function_name => 'literary_form_type', :title => (d.literary_form_type != nil ? d.literary_form_type.title : 'Select A Value'), :id => d.id, :data_id => 186, :update_id => "definition[literary_form_type#{d.id}]_selector"})%>
			</span>

			</span>
			<%#= link_to image_tag('comment.png',:border => 0,:id => 'literary_form'+d.id.to_s), '#', :title => 'Edit literary form' %>
    <%#= in_place_select_editor_field( :definition, :literary_form, {}, {:select_options => @literary_form, :fieldname => 'definition[literary_form]', :external_control => 'literary_form'+d.id.to_s}) %><br>
	<script type="text/javascript" language="javascript">Event.observe('definition[literary_form<%= d.id %>]_value', 'mouseover', function(e){ e=document.getElementById('definition[literary_form<%= d.id %>]_value');e.style.backgroundColor='#FFFF99'; });Event.observe('definition[literary_form<%= d.id %>]_value', 'mouseout', function(e){ new Effect.Highlight('definition[literary_form<%= d.id %>]_value',{ startcolor: '#FFFF99', endcolor: '#FFFFFF', restorecolor: '#FFFFFF'})});</script>
		<% end %>
		
		<% if d.pronunciations.size > 0 %>
		<% count = 0;
		   size = d.pronunciations.size;
			for e in d.pronunciations %>
			<%# if e != nil %>			
			<b>Pronunciation <% if (e.pronunciation_type != nil and e.pronunciation_type != '') or (e.pronunciation_category != nil) %>
					(
						<%= '['+e.pronunciation_type.s+']' if (e.pronunciation_type != nil and e.pronunciation_type != '') %>
						<%= e.pronunciation_category.title if (e.pronunciation_category != nil) %>
					)
					<% end %>
				:</b>
				<!-- <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->
	<%#= link_to_function image_tag('pencil.png',:border => 0), "dialect_id="+e.id.to_s+";edit_popup('pronunciations','"+e.id.to_s+"','"+head_id.to_s+"')", :title => "Edit"%>
			<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => e.id, :history_class => e.class.to_s }}) %>			
			<%= link_to_remote image_tag('pencil.png',:border=>0, :title => 'Edit'), :update => d.id.to_s+'_pronunciation', :loading => 'dialect_id='+e.id.to_s, :url => {:controller => 'pronunciations', :action => 'public_edit', :id => e.id, :params => {'definition_id' => head_id}} %>
			<span class=menuvalue onclick=show_menu(pro_menu,getCoord(arguments[0]));>
			<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'pronunciation_controller="pronunciation";pronunciation_id='+e.id.to_s, :title => 'Edit Relationships' %> 
			</span>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Pronunciation'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_pronunciation', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id, :pronunciation => e.id }}, :confirm => "Are you sure you want to remove this Pronunciation?") %>
			<%#= e.displayInfo %>
			<% if e.phonetic_transliteration != nil %>
			<!-- <b>Phonetic transliteration: </b> -->
			<%= e.phonetic_transliteration.s %>
			<% end %>
			<dl style="margin-top:0em;margin-bottom:0em;">
				<dd style="display:none"></dd>
			<% if (e.major_dialect_family != nil and e.major_dialect_family != '') or (e.major_dialect_family_type != nil) %>
				 <dd><b>Dialect: </b>
					<span class="tib1"><%= '['+e.major_dialect_family.s+']' if e.major_dialect_family != nil and e.major_dialect_family != '' %></span>
					<%= e.major_dialect_family_type.title if e.major_dialect_family_type != nil %>
					</dd>
			<% end %>
			<%# end %>
			<% if e.meta != nil%>
				<% tm = Time.now %>
				<dd><%= render :partial => 'meta', :locals => {:meta_location => tm.to_f, :meta => e.meta , :head_id => head_id} %></dd>
			<% end %>

			</dl>
		<% end %>
		<!-- <br> -->
		<% end %>
		<span id="<%= d.id%>_pronunciation" ></span>

		<% if d.major_dialect_family_type_id != nil %>
			<b>Tibetan Dialect:</b>  
			<span class="tib1">
		    <input type=hidden name=definition[major_dialect_family<%= d.id %>] id=definition[major_dialect_family<%= d.id %>] value="<%= d.major_dialect_family.to_s %>" >
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Dialect'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_dialect', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id }}, :confirm => "Are you sure you want to remove this Dialect?") %>					    <span id=definition[major_dialect_family<%= d.id %>]_value class=menuvalue onclick1='definition_id=<%= d.id %>;dialect_id=<%= d.id %>;show_menu(grammar_menu,getCoord(arguments[0]));'>
					<%#= link_to image_tag('comment.png',:border => 0), '#', :title => 'Edit function' %>

			<%= image_tag('comment.png',:border => 0, :title => 'Edit') %> 
			<span id="definition[major_dialect_family_type<%= d.id %>]_selector" >
				<%= '[<i>'+d.major_dialect_family.s+'</i>]' if d.major_dialect_family != nil %>
				<%= render(:partial => 'display_category_selector_link', :locals => {:function_name => 'major_dialect_family_type', :title => (d.major_dialect_family_type != nil ? d.major_dialect_family_type.title : 'Select A Value'), :id => d.id, :data_id => 638, :update_id => "definition[major_dialect_family_type#{d.id}]_selector"})%>
			</span>

			</span>
<br>
    <script type="text/javascript" language="javascript">Event.observe('definition[major_dialect_family<%= d.id %>]_value', 'mouseover', function(e){ e=document.getElementById('definition[major_dialect_family<%= d.id %>]_value');e.style.backgroundColor='#FFFF99'; });Event.observe('definition[major_dialect_family<%= d.id %>]_value', 'mouseout', function(e){ new Effect.Highlight('definition[major_dialect_family<%= d.id %>]_value',{ startcolor: '#FFFF99', endcolor: '#FFFFFF', restorecolor: '#FFFFFF'})});</script>

		
		</span>
		<% end %>
		
		
		<% if d.etymologies.size > 0 %>
		<% count = 0;
		   size = d.etymologies.size;
		   for e in d.etymologies %>
		<b>Etymology:</b>
				<!-- <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->
	<%#= link_to_function image_tag('pencil.png',:border => 0), "edit_popup('etymologies','"+e.id.to_s+"','"+head_id.to_s+"')", :title => "Edit"%>
			<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => e.id, :history_class => e.class.to_s }}) %>			
			<%= link_to_remote image_tag('pencil.png',:border=>0, :title => 'Edit'), :update => d.id.to_s+'_etymology', :loading => 'dialect_id='+e.id.to_s, :url => {:controller => 'etymologies', :action => 'public_edit', :id => e.id, :params => {'definition_id' => head_id}} %>
			<span class=menuvalue onclick=show_menu(etymology_menu,getCoord(arguments[0]));>
			<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'etymology_id='+e.id.to_s, :title => 'Edit Relationships' %> 
			</span>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Etymology'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_etymology', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id, :etymology => e.id }}, :confirm => "Are you sure you want to remove this Etymology?") %>			
				<% if e.etymology_type != nil and e.etymology_type != '' %>
					<i>[<%= e.etymology_type.s %>]</i>&nbsp;
				<% end %>
				<% if e.etymology_category != nil %>
					<i><%= e.etymology_category.title %></i>&nbsp;
				<% end %>
			<span class="etymologies_show">	
			<%= e.etymology.s if e.etymology != nil %>
			</span>
			<dl style="margin-top:0em;margin-bottom:0em;">
				<dd style="display:none"></dd>
			<% if e.loan_language != nil and e.loan_language != ''%>
					<dd><b>Loan language: </b>[<%= e.loan_language %>]</dd>
			<% end %>
			<% if e.loan_language_type != nil and e.loan_language_type != ''%>
					<dd><b>Loan language: </b><%= e.loan_language_type.title %></dd>
			<% end %>
			<% if e.derivation != nil and e.derivation != ''%>
					<dd><b>Derivation: </b>[<%= e.derivation.s %>]</dd>
			<% end %>
			<% if e.derivation_type != nil%>
					<dd><b>Derivation: </b><%= e.derivation_type.title %></dd>
			<% end %>
			<% if e.meta != nil%>
			<dd>
			<% t = Time.now %>
			<%= render :partial => 'meta', :locals => {:meta_location => t.to_f, :meta => e.meta , :head_id => head_id} %>
			</dd>
			<% end %>
			<% if e.translations.size > 0 %>
				<!-- <br>	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->
				<% for t in e.translations %>
					<% if t.translation != nil and t.translation != ''%>
						<dd><b>Translation: </b>
						<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => t.id, :history_class => t.class.to_s }}) %>			
				<%= link_to_remote image_tag('pencil.png',:border => 0, :title => "Edit"),:update => e.id.to_s+'_translation', :loading => 'dialect_id='+t.id.to_s, :url => {:controller => 'translations', :action => 'public_edit', :id => t.id, :params => {'definition_id' => head_id}} %>
						<span class=menuvalue onclick=show_menu(translation_menu,getCoord(arguments[0]));>
						<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'translation_id='+t.id.to_s, :title => 'Edit Relationships' %> 
						</span>
						<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Translation'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_translation', :id => e.id, :params => {:parent_id => parent_id, :head_id => head_id, :translation => t.id }}, :confirm => "Are you sure you want to remove this Translation?") %>			
						<% if t.language == 'Tibetan' %>
						<span class="tib1">
						<% end %>
						<span class='tinyfied_show'>
						<%= t.translation.s %>
						</span>
						<% if t.language == 'Tibetan' %>
						</span>
						<% end %>
						<% if t.meta != nil%>
						<dl style="margin-top:0em;margin-bottom:0em;">
								<dd style="display:none"></dd>
								<dd>		<% tm = Time.now %>
						<%= render :partial => 'meta', :locals => {:meta_location => tm.to_f, :meta => t.meta , :head_id => head_id} %>
							</dd>
						</dl>
						<% end %>
						</dd>
					<% end %>
				<% end %>
				<span id="<%= e.id %>_translation"></span>
			<% end %>
			</dl>
		<% end %>
		<!-- <br> -->
		<% end %>
		<span id="<%= d.id%>_etymology" ></span>
		<% if d.spellings.size > 0%>
		<% count = 0;
		   size = d.spellings.size;
			for e in d.spellings %>
		<b>Spelling:</b>
				<!-- <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->
	<%#= link_to_function image_tag('pencil.png',:border => 0), "edit_popup('spellings','"+e.id.to_s+"','"+head_id.to_s+"')", :title => "Edit"%>
			<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => e.id, :history_class => e.class.to_s }}) %>			
			<%= link_to_remote image_tag('pencil.png',:border=>0, :title => 'Edit'), :update => d.id.to_s+'_spelling', :loading => 'dialect_id='+e.id.to_s, :url => {:controller => 'spellings', :action => 'public_edit', :id => e.id, :params => {'definition_id' => head_id}} %>
	
			<span class=menuvalue onclick=show_menu(spelling_menu,getCoord(arguments[0]));>
			<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'spelling_id='+e.id.to_s, :title => 'Edit Relationships' %> 
			</span>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Spelling'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_spelling', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id, :spelling => e.id }}, :confirm => "Are you sure you want to remove this Spelling?") %>
			<%= e.spelling %>
			<dl style="margin-top:0em;margin-bottom:0em;">
				<dd style="display:none"></dd>
			<% if e.basis_of_spelling != nil and e.basis_of_spelling != ''%>
					<dd><b>Basis: </b>[<%= e.basis_of_spelling.s %>]</dd>
			<% end %>
			<% if e.basis_of_spelling_type != nil%>
					<dd><b>Basis: </b><%= e.basis_of_spelling_type.title %></dd>
			<% end %>
			<% if e.spelling_type != nil and e.spelling_type != ''%>
					<dd><b>Type: </b><%= e.spelling_type.s %></dd>
			<% end %>
			<% if e.meta != nil%>
				<dd>
				<% t = Time.now %>
				<%= render :partial => 'meta', :locals => {:meta_location => t.to_f, :meta => e.meta , :head_id => head_id} %>
				</dd>
			<% end %>
			</dl>
		<% end %>
		<!-- <br> -->
		<% end %>
		<span id="<%= d.id%>_spelling" > </span>
		<% if d.definition_definition_form_tos.size > 0 or d.definition_definition_form_froms.size > 0%>
		<% count = 0;
		   size = d.definition_definition_form_tos.size;
			for e in d.definition_definition_form_tos %>
		<b>Related term:</b>
				<!-- <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->
			<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => e.id, :history_class => e.class.to_s }}) %>			
			<%= link_to_function image_tag('pencil.png',:border => 0), "edit_form_from('definition_definition_forms','"+e.id.to_s+"','"+head_id.to_s+"')", :title => "Edit"%>
			<span class=menuvalue onclick=show_menu(related_term_menu,getCoord(arguments[0]));>
			<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'definition_definition_form_id='+e.id.to_s, :title => 'Edit Relationships' %> 
			</span>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove related term'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_form_to', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id, :form_to => e.id }}, :confirm => "Are you sure you want to remove this Term?") %>			
			<span class="tib1">
			<%= e.displayToInfoPublic.s %>
			<%= link_to(e.displayToTerm.s, :controller => 'definitions', :action => 'public_edit', :id => e.definition_from.id) unless e.definition_from == nil %>
			</span>
			<dl style="margin-top:0em;margin-bottom:0em;">
				<dd style="display:none"></dd>
			<% if e.meta != nil%>
				<dd>
				<% t = Time.now %>
				<%= render :partial => 'meta', :locals => {:meta_location => t.to_f, :meta => e.meta , :head_id => head_id} %>
				</dd>
			<% end %>
			</dl>
			<!-- <br> -->
		<% end %>
		<% 
		   size = d.definition_definition_form_froms.size;
			for e in d.definition_definition_form_froms %>
		<b>Related term:</b>
				<!-- <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->
			<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => e.id, :history_class => e.class.to_s }}) %>			
			<%= link_to_function image_tag('pencil.png',:border => 0), "edit_form_to('definition_definition_forms','"+e.id.to_s+"','"+head_id.to_s+"')", :title => "Edit"%>
			<span class=menuvalue onclick=show_menu(related_term_menu,getCoord(arguments[0]));>
			<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'definition_definition_form_id='+e.id.to_s, :title => 'Edit Relationships' %> 
			</span>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove related term'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_form_from', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id, :form_from => e.id }}, :confirm => "Are you sure you want to remove this related term?") %>			
			<span class="tib1">
			<%= e.displayFromInfoPublic.s %>
			<%= link_to(e.displayFromTerm.s, :controller => 'definitions', :action => 'public_edit', :id => e.definition_to.id) unless e.definition_to == nil%>
			</span>
			<br>
			<dl style="margin-top:0em;margin-bottom:0em;">
				<dd style="display:none"></dd>
			<% if e.meta != nil%>
				<dd>
				<% t = Time.now %>
				<%= render :partial => 'meta', :locals => {:meta_location => t.to_f, :meta => e.meta , :head_id => head_id} %>
				</dd>
			<% end %>
			</dl>
		<% end %>
		<!-- <br> -->
		<% end %>
		<span id="<%= d.id%>_form_from" > </span>
		<span id="<%= d.id%>_form_to" > </span>
		<% if d.full_synonyms.size > 0%>
		<% count = 0;
		   size = d.pronunciations.size;
		  for e in d.full_synonyms %>
		<b>Full Synonym:</b>
	<%#= link_to_function image_tag('pencil.png',:border => 0), "edit_popup('full_synonyms','"+e.id.to_s+"','"+head_id.to_s+"')", :title => "Edit"%>
			<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => e.id, :history_class => e.class.to_s }}) %>			
	<%#= link_to_remote image_tag('pencil.png',:border=>0, :title => 'Edit'), :update => d.id.to_s+'_full_synonym', :loading => 'dialect_id='+e.id.to_s, :url => {:controller => 'full_synonyms', :action => 'public_edit', :id => e.id, :params => {'definition_id' => head_id}} %>
			<span class=menuvalue onclick=show_menu(full_synonym_menu,getCoord(arguments[0]));>
			<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'full_synonym_id='+e.id.to_s, :title => 'Edit Relationships' %> 
			</span>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Full Synyonym'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_full_synonym', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id, :full_synonym => e.id }}, :confirm => "Are you sure you want to remove this Full Synonym?") %>			
			<span class="tib1">
				<% for t in e.definitions %>
					<%= link_to(t.term.s, :action => 'public_edit', :id => t.id) unless t.term == d.term %>&nbsp;
				<% end %>
			</span>
			<br>
			<dl style="margin-top:0em;margin-bottom:0em;">
				<dd style="display:none"></dd>
			<% if e.meta != nil%>
				<dd>
				<% t = Time.now %>
				<%= render :partial => 'meta', :locals => {:meta_location => t.to_f, :meta => e.meta , :head_id => head_id} %>
				</dd>
			<% end %>
			</dl>
		<% end %>
		<!-- <br> -->
		<% end %>
		<span id="<%= d.id%>_full_synonym" > </span>
		<% if d.translation_equivalents.size > 0%>
		<% count = 0;
		   size = d.translation_equivalents.size;
			for e in d.translation_equivalents %>
		<b>Translation equivalent:</b>
				<!-- <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->
			<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => e.id, :history_class => e.class.to_s }}) %>			
	<%= link_to_remote image_tag('pencil.png',:border => 0, :title => "Edit"),:update => d.id.to_s+'_translation_equivalent', :loading => 'dialect_id='+e.id.to_s, :url => {:controller => 'translation_equivalents', :action => 'public_edit', :id => e.id, :params => {'definition_id' => head_id}} %>
			<span class=menuvalue onclick=show_menu(translation_equivalent_menu,getCoord(arguments[0]));>
			<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'translation_equivalent_id='+e.id.to_s, :title => 'Edit Relationships' %> 
			</span>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Translation Equivalent'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_translation_equivalent', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id, :translation_equivalent => e.id }}, :confirm => "Are you sure you want to remove this Translation Equivalent?") %>			
			<% if e.language != nil and e.language != '' %>
				<i><%= e.language %></i>&nbsp;
			<% end %>
					<% if e.language == 'Tibetan' %>
					<span class="tib1">
					<% end %>
					<span class="tinyfied_show">
			<%= e.translation_equivalent.s if e.translation_equivalent != nil %>
					</span>
					<% if e.language == 'Tibetan' %>
					</span>
					<% end %>
			<dl style="margin-top:0em;margin-bottom:0em;">
				<dd style="display:none"></dd>
			<% if e.meta != nil%>
			<dd>
			<% t = Time.now %>
			<%= render :partial => 'meta', :locals => {:meta_location => t.to_f, :meta => e.meta , :head_id => head_id} %>
			</dd>
			<% end %>
			</dl>
		<% end %>
		<!-- <br> -->
		<% end %>
		<span id="<%= d.id%>_translation_equivalent" > </span>
		<% if d.model_sentences.size > 0%>
		<% count = 0;
		   size = d.model_sentences.size;
			for e in d.model_sentences %>
		<b>Model sentences:</b>
				<!-- <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->
	<%#= link_to_function image_tag('pencil.png',:border => 0), "edit_popup('model_sentences','"+e.id.to_s+"','"+head_id.to_s+"')", :title => "Edit"%>
			<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => e.id, :history_class => e.class.to_s }}) %>			
	<%= link_to_remote image_tag('pencil.png',:border=>0, :title => 'Edit'), :update => d.id.to_s+'_model_sentence', :loading => 'dialect_id='+e.id.to_s, :url => {:controller => 'model_sentences', :action => 'public_edit', :id => e.id, :params => {'definition_id' => head_id}} %>
			<span class=menuvalue onclick=show_menu(model_sentence_menu,getCoord(arguments[0]));>
			<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'model_sentence_id='+e.id.to_s, :title => 'Edit Relationships' %> 
			</span>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Model Sentence'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_model_sentence', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id, :model_sentence => e.id }}, :confirm => "Are you sure you want to remove this Model Sentence?") %>			
					<% if e.language == 'Tibetan' %>
					<span class="tib1">
					<% end %>
					<span class='tinyfied_show'>
			<%= e.model_sentence.s if e.model_sentence != nil %>
					</span>
					<% if e.language == 'Tibetan' %>
					</span>
					<% end %>			
			<dl style="margin-top:0em;margin-bottom:0em;">
				<dd style="display:none"></dd>
			<% if e.sentence_type != nil and e.sentence_type != ''%>
					<dd><b>Type: </b><%= e.sentence_type %></dd>
			<% end %>
			<% if e.source != nil and e.source != ''%>
					<dd><b>Source: </b><%= e.source %></dd>
			<% end %>
			<% if e.meta != nil%>
			<dd>
			<% t = Time.now %>
			<%= render :partial => 'meta', :locals => {:meta_location => t.to_f, :meta => e.meta , :head_id => head_id} %>
			</dd>
			<% end %>
				<% for t in e.translations %>
					<% if t.translation != nil and t.translation != ''%>
						<dd><b>Translation: </b>
						<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => t.id, :history_class => t.class.to_s }}) %>			
				<%= link_to_remote image_tag('pencil.png',:border => 0, :title => "Edit"),:update => e.id.to_s+'_translation', :loading => 'dialect_id='+t.id.to_s, :url => {:controller => 'translations', :action => 'public_edit', :id => t.id, :params => {'definition_id' => head_id}} %>
						<span class=menuvalue onclick=show_menu(translation_menu,getCoord(arguments[0]));>
						<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'translation_id='+t.id.to_s, :title => 'Edit Relationships' %> 
						</span>
						<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Translation'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_translation', :id => e.id, :params => {:parent_id => parent_id, :head_id => head_id, :translation => t.id }}, :confirm => "Are you sure you want to remove this Translation?") %>			
						<% if t.language == 'Tibetan' %>
						<span class="tib1">
						<% end %>
						<span class='tinyfied_show'>
						<%= t.translation.s if t.translation != nil %>
						</span>
						<% if t.language == 'Tibetan' %>
						</span>
						<% end %>
						<% if t.meta != nil%>
						<dl style="margin-top:0em;margin-bottom:0em;">
								<dd style="display:none"></dd>
								<dd>		<% tm = Time.now %>
						<%= render :partial => 'meta', :locals => {:meta_location => tm.to_f, :meta => t.meta , :head_id => head_id} %>
							</dd>
						</dl>
						<% end %>
						</dd>
					<% end %>
				<% end %>
				<span id="<%= e.id %>_translation"></span>
				</dl>
		<% end %>
		<!-- <br> -->
		<% end %>
		<span id="<%= d.id%>_model_sentence" > </span>
		<% if d.literary_quotations.size > 0%>
		<% count = 0;
		   size = d.literary_quotations.size;
			for e in d.literary_quotations %>
		<b>Literary quotation:</b>
				<!-- <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->
	<%#= link_to_function image_tag('pencil.png',:border => 0), "edit_popup('literary_quotations','"+e.id.to_s+"','"+head_id.to_s+"')", :title => "Edit"%>
			<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => e.id, :history_class => e.class.to_s }}) %>			
	<%= link_to_remote image_tag('pencil.png',:border=>0, :title => 'Edit'), :update => d.id.to_s+'_literary_quotation', :loading => 'dialect_id='+e.id.to_s, :url => {:controller => 'literary_quotations', :action => 'public_edit', :id => e.id, :params => {'definition_id' => head_id}} %>
			<span class=menuvalue onclick=show_menu(literary_quotation_menu,getCoord(arguments[0]));>
			<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'literary_quotation_id='+e.id.to_s, :title => 'Edit Relationships' %> 
			</span>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Literary Quotation'), :update => 'definition_space', :complete => 're_initialize();', :url =>{:action => 'public_remove_literary_quotation', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id, :literary_quotation => e.id }}, :confirm => "Are you sure you want to remove this Literary Quotation?") %>			
			<%#= e.displayInfo %>
			<dl style="margin-top:0em;margin-bottom:0em;">
				<dd style="display:none"></dd>
			<% if e.title != nil and e.title != ''%>
					<dd><b>Title: </b><%= e.title.s %></dd>
			<% end %>
			<% if e.author != nil and e.author != ''%>
					<dd><b>Author: </b><%= e.author.s %></dd>
			<% end %>
			<% if e.passage_number != nil and e.passage_number != ''%>
					<dd><b>Page number: </b><%= e.passage_number.s %></dd>
			<% end %>
			<% if e.passage != nil and e.passage	 != ''%>
					<dd>
						<b>Passage: </b>
						<span class="tib1">
						<span class="tibpassage_show">
						<%= e.passage.s.gsub(@tibetan_space,@tibetan_space_fix) if e.passage != nil %>
						</span>
						</span>
					</dd>
			<% end %>
			<% if e.meta != nil%>
				<dd><% t = Time.now %>
			<%= render :partial => 'meta', :locals => {:meta_location => t.to_f, :meta => e.meta , :head_id => head_id} %>
			</dd>
			<% end %>
				<% for t in e.translations %>
					<% if t.translation != nil and t.translation != ''%>
						<dd><b>Translation: </b>
						<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => t.id, :history_class => t.class.to_s }}) %>			
				<%= link_to_remote image_tag('pencil.png',:border => 0, :title => "Edit"),:update => e.id.to_s+'_translation', :loading => 'dialect_id='+t.id.to_s, :url => {:controller => 'translations', :action => 'public_edit', :id => t.id, :params => {'definition_id' => head_id}} %>
						<span class=menuvalue onclick=show_menu(translation_menu,getCoord(arguments[0]));>
						<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'translation_id='+t.id.to_s, :title => 'Edit Relationships' %> 
						</span>
						<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Translation'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_translation', :id => e.id, :params => {:parent_id => parent_id, :head_id => head_id, :translation => t.id }}, :confirm => "Are you sure you want to remove this Translation?") %>			
						<% if t.language == 'Tibetan' %>
						<span class="tib1">
						<% end %>
						<span class='tinyfied_show'>
						<%= t.translation.s if t.translation != nil %>
						</span>
						<% if t.language == 'Tibetan' %>
						</span>
						<% end %>
						<% if t.meta != nil%>
						<dl style="margin-top:0em;margin-bottom:0em;">
								<dd style="display:none"></dd>
								<dd>		<% tm = Time.now %>
						<%= render :partial => 'meta', :locals => {:meta_location => tm.to_f, :meta => t.meta , :head_id => head_id} %>
							</dd>
						</dl>
						<% end %>
						</dd>
					<% end %>
				<% end %>
				<span id="<%= e.id %>_translation"></span>
			</dl>
		<% end %>
		<!-- <br> -->
		<% end %>
		<span id="<%= d.id%>_literary_quotation" > </span>
		<% if d.oral_quotations.size > 0%>
		<% count = 0;
		   size = d.oral_quotations.size;
			for e in d.oral_quotations %>
		<b>Oral quotation:</b>
				<!-- <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->
	<%#= link_to_function image_tag('pencil.png',:border => 0), "edit_popup('oral_quotations','"+e.id.to_s+"','"+head_id.to_s+"')", :title => "Edit"%>
			<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history_id => e.id, :history_class => e.class.to_s }}) %>			
	<%= link_to_remote image_tag('pencil.png',:border=>0, :title => 'Edit'), :update => d.id.to_s+'_oral_quotation', :loading => 'dialect_id='+e.id.to_s, :url => {:controller => 'oral_quotations', :action => 'public_edit', :id => e.id, :params => {'definition_id' => head_id}} %>
			<span class=menuvalue onclick=show_menu(oral_quotation_menu,getCoord(arguments[0]));>
			<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'oral_quotation_id='+e.id.to_s, :title => 'Edit Relationships' %> 
			</span>
			<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Oral Quotation'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_oral_quotation', :id => d.id, :params => {:parent_id => parent_id, :head_id => head_id, :oral_quotation => e.id }}, :confirm => "Are you sure you want to remove this Oral Quotation?") %>			
			<%= e.displayInfo.s %>
			<dl style="margin-top:0em;margin-bottom:0em;">
				<dd style="display:none"></dd>
			<% if e.meta != nil%>
			<dd>
			<% t = Time.now %>
			<%= render :partial => 'meta', :locals => {:meta_location => t.to_f, :meta => e.meta , :head_id => head_id} %>
			</dd>
			<% end %>
				<% for t in e.translations %>
					<% if t.translation != nil and t.translation != ''%>
						<dd><b>Translation: </b>
						<%= link_to_remote(image_tag('user.png',:border=>0, :title => 'Contributors'), :update => 'edit_box', :loading => "Element.show('edit_box');",:url => {:action => 'display_history', :params => {:history => t.update_history }}) %>			
				<%= link_to_remote image_tag('pencil.png',:border => 0, :title => "Edit"),:update => e.id.to_s+'_translation', :loading => 'dialect_id='+t.id.to_s, :url => {:controller => 'translations', :action => 'public_edit', :id => t.id, :params => {'definition_id' => head_id}} %>
						<span class=menuvalue onclick=show_menu(translation_menu,getCoord(arguments[0]));>
						<%= link_to_function image_tag('plugin.png', :alt => 'Edit', :border => 0), 'translation_id='+t.id.to_s, :title => 'Edit Relationships' %> 
						</span>
						<%= link_to_remote(image_tag('cross.png',:border=>0, :title => 'Remove Translation'), :update => 'definition_space', :complete => 're_initialize();', :url => {:action => 'public_remove_translation', :id => e.id, :params => {:parent_id => parent_id, :head_id => head_id, :translation => t.id }}, :confirm => "Are you sure you want to remove this Translation?") %>			
						<% if t.language == 'Tibetan' %>
						<span class="tib1">
						<% end %>
						<span class='tinyfied_show'>
						<%= t.translation.s if t.translation != nil %>
						</span>
						<% if t.language == 'Tibetan' %>
						</span>
						<% end %>
						<% if t.meta != nil%>
						<dl style="margin-top:0em;margin-bottom:0em;">
								<dd style="display:none"></dd>
								<dd>		<% tm = Time.now %>
						<%= render :partial => 'meta', :locals => {:meta_location => tm.to_f, :meta => t.meta , :head_id => head_id} %>
							</dd>
						</dl>
						<% end %>
						</dd>
					<% end %>
				<% end %>
				<span id="<%= e.id %>_translation"></span>
			</dl>
		<% end %>
		<!-- <br> -->
		<% end %>
		<span id="<%= d.id%>_oral_quotation" > </span>

		
<% end %>
