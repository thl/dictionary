
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd ">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>The Tibetan and Himalayan Digital Library</title>
<meta name="description" content="" />
<meta name="keywords" content="" />

<script type="text/javascript" src="http://staging.thdl.org/global/php/combineJS.php"></script>

<%= javascript_include_tag :defaults %> 

<%= stylesheet_link_tag_html4 'menu' %>

<%= stylesheet_link_tag_html4 'http://thlib.org/global/css/thdl_style.css' %>
<%= stylesheet_link_tag_html4 'http://www.thlib.org/reference/dictionaries/tibetan-dictionary/css/tibetan-dictionary.css' %>

<%= stylesheet_link_tag_html4 'thdl_public' %>

<%= javascript_include_tag "in_place_select_editor" %> 
<%= javascript_include_tag 'menu', 'menu_items', 'menu_tpl' %> 

<script language="JavaScript" type="text/JavaScript">
<!--

	hs.graphicsDir = 'http://www.thlib.org/global/js/graphics/';
	hs.outlineType = 'rounded-white';
	hs.outlineWhileAnimating = true;
	hs.targetX='mastheadNavbar 19px';
	hs.targetY='mastheadNavbar -54px';

function MyHash()
{
	this.length = 0;
	this.items = new Array();
	for (var i = 0; i < arguments.length; i += 2) {
		if (typeof(arguments[i + 1]) != 'undefined') {
			this.items[arguments[i]] = arguments[i + 1];
			this.length++;
		}
	}
   
	this.removeItem = function(in_key)
	{
		var tmp_value;
		if (typeof(this.items[in_key]) != 'undefined') {
			this.length--;
			var tmp_value = this.items[in_key];
			delete this.items[in_key];
		}
	   
		return tmp_value;
	}

	this.getItem = function(in_key) {
		return this.items[in_key];
	}

	this.setItem = function(in_key, in_value)
	{
		if (typeof(in_value) != 'undefined') {
			if (typeof(this.items[in_key]) == 'undefined') {
				this.length++;
			}

			this.items[in_key] = in_value;
		}
	   
		return in_value;
	}

	this.hasItem = function(in_key)
	{
		return typeof(this.items[in_key]) != 'undefined';
	}
}

var open_windows=new Array();

open_windows['definition_definition_form'] = new MyHash();
//open_windows['internal_definition_definition_form'] = new MyHash();
open_windows['definition'] = new MyHash();
open_windows['internal_definition'] = new MyHash();
open_windows['etymology'] = new MyHash();
//open_windows['internal_etymology'] = new MyHash();
open_windows['full_synonym'] = new MyHash();
//open_windows['internal_full_synonym'] = new MyHash();
open_windows['group'] = new MyHash();
//open_windows['internal_group'] = new MyHash();
open_windows['literary_quotation'] = new MyHash();
//open_windows['internal_literary_quotation'] = new MyHash();
open_windows['meta'] = new MyHash();
//open_windows['internal_meta'] = new MyHash();
open_windows['model_sentence'] = new MyHash();
//open_windows['internal_model_sentence'] = new MyHash();
open_windows['oral_quotation'] = new MyHash();
//open_windows['internal_oral_quotation'] = new MyHash();
open_windows['pronunciation'] = new MyHash();
//open_windows['internal_pronunciation'] = new MyHash();
open_windows['spelling'] = new MyHash();
//open_windows['internal_spelling'] = new MyHash();
open_windows['translation_equivalent'] = new MyHash();
//open_windows['internal_translation_equivalent'] = new MyHash();
open_windows['translation'] = new MyHash();
//open_windows['internal_translation'] = new MyHash();
open_windows['etymology_type'] = new MyHash();
open_windows['pronunciation_type'] = new MyHash();
open_windows['language_context'] = new MyHash();
open_windows['script'] = new MyHash();
open_windows['literary_quotation'] = new MyHash();
open_windows['literary_genre'] = new MyHash();
open_windows['literary_form'] = new MyHash();
open_windows['grammar_function_level_one'] = new MyHash();
open_windows['grammar_function_level_two'] = new MyHash();
open_windows['grammar_function_level_three'] = new MyHash();
open_windows['literary_period'] = new MyHash();
open_windows['major_dialect'] = new MyHash();
open_windows['specific_dialect'] = new MyHash();
open_windows['model_sentence_type'] = new MyHash();
open_windows['spelling_major_dialect'] = new MyHash();
open_windows['spelling_specific_dialect'] = new MyHash();
open_windows['theme_level_two'] = new MyHash();
open_windows['theme_level_one'] = new MyHash();
open_windows['theme_level_three'] = new MyHash();
open_windows['thematic_classification'] = new MyHash();
open_windows['term_type'] = new MyHash();
open_windows['register'] = new MyHash();
open_windows['language'] = new MyHash();
open_windows['loan_language'] = new MyHash();
open_windows['source_type'] = new MyHash();
open_windows['project'] = new MyHash();
open_windows['source'] = new MyHash();

function check_windows(table) {
	if (open_windows[table].length > 0)  {
		alert('You have unsaved changes.')
		return false;		
	}
	else
		return true;
}


function MM_openNewWindow(theURL,winName,features) { //v2.0
  window.open(theURL,winName,features);
}
function MM_findObj(n, d) { //v4.01
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && d.getElementById) x=d.getElementById(n); return x;
}
function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}
function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
 var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
   var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
   if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function getCoord(e) { if( !e ) { e = window.event; } if( !e || ( typeof( e.pageX ) != 'number' && typeof( e.clientX ) != 'number' ) ) { return window.alert('Your browser did not pass the required information about the event'); }
	if( typeof( e.pageX ) == 'number' ) { var xcoord = e.pageX; var ycoord = e.pageY; } else {
		var xcoord = e.clientX; var ycoord = e.clientY;
		if( !( ( window.navigator.userAgent.indexOf( 'Opera' ) + 1 ) || ( window.ScriptEngine && ScriptEngine().indexOf( 'InScript' ) + 1 && !document.createElement ) || window.navigator.vendor == 'KDE' ) ) {
			if( document.documentElement && ( document.documentElement.scrollTop || document.documentElement.scrollLeft ) ) {
				xcoord += document.documentElement.scrollLeft; ycoord += document.documentElement.scrollTop;
			} else if( document.body && ( document.body.scrollTop || document.body.scrollLeft ) ) {
				xcoord += document.body.scrollLeft; ycoord += document.body.scrollTop;
			}
		}
	}
	return [xcoord,ycoord];
}

//-->
 </script>


<style>
.def_header {
	font-size: 9px;
	padding: 10px;
}
#content {
	float: left;
	width:700px;
}
#content a:link, a:visited {
	color: #0000cc;
}
</style>

</head>

<body class="<%= @page_class %>">

<!-- begin masthead inlude -->
<!--[if ie]><div id="ie-root"><![endif]-->
<p id="skip-links"><a href="#content">Skip to main content</a></p>
<div id="masthead-topbar"></div>
<div id="body-wrapper">
<!-- begin masthead -->

<%= banner %>

<%= title %>
ï»¿
<!-- THDL Sitemap -->
<%= menu1 %>
<%= menu1_content %>

<!-- Preferences -->
<%= menu2 %>
<%= menu2_content %>


<div id="debug"></div>


<%= navbar %>

<!-- end masthead -->

<div id="buffer"></div><!-- end masthead include -->


<!-- begin content -->

<div id="content" class="dictionary_content">
	<div class="shell-1">

		<%= @content_for_layout %>
	</div>
</div>

<!-- end content -->


<%= side_column %>

<!-- begin footer include -->
<br class="clear" /> 

<!-- loading for wiki -->
<div id="loading" class="clear">Loading... </div>

</div><!-- end body-wrapper -->


<!-- begin footer -->
<%= footer %>

</body>
</html>


<!-- begin footer utility include -->
<!-- end footer utility include -->
